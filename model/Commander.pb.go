// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/Commander.proto

/*
Package model is a generated protocol buffer package.

It is generated from these files:
	model/Commander.proto

It has these top-level messages:
	UUID
	CommandParams
	Command
	PagedCommands
	Event
	PagedEvents
	PagingInfo
	StreamRequest
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UUID struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *UUID) Reset()                    { *m = UUID{} }
func (m *UUID) String() string            { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()               {}
func (*UUID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CommandParams struct {
	Action string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Sync   bool   `protobuf:"varint,3,opt,name=sync" json:"sync,omitempty"`
}

func (m *CommandParams) Reset()                    { *m = CommandParams{} }
func (m *CommandParams) String() string            { return proto.CompactTextString(m) }
func (*CommandParams) ProtoMessage()               {}
func (*CommandParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommandParams) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CommandParams) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *CommandParams) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

type Command struct {
	Id        *UUID   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Action    string  `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Data      string  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Timestamp int64   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Topic     string  `protobuf:"bytes,5,opt,name=topic" json:"topic,omitempty"`
	Partition int32   `protobuf:"varint,6,opt,name=partition" json:"partition,omitempty"`
	Offset    int64   `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Children  []*UUID `protobuf:"bytes,8,rep,name=children" json:"children,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Command) GetId() *UUID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Command) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Command) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Command) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Command) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Command) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *Command) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Command) GetChildren() []*UUID {
	if m != nil {
		return m.Children
	}
	return nil
}

type PagedCommands struct {
	Limit    int64      `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset   int64      `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Total    int64      `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Commands []*Command `protobuf:"bytes,4,rep,name=commands" json:"commands,omitempty"`
}

func (m *PagedCommands) Reset()                    { *m = PagedCommands{} }
func (m *PagedCommands) String() string            { return proto.CompactTextString(m) }
func (*PagedCommands) ProtoMessage()               {}
func (*PagedCommands) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PagedCommands) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PagedCommands) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PagedCommands) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PagedCommands) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

type Event struct {
	Id        *UUID  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Data      string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Topic     string `protobuf:"bytes,5,opt,name=topic" json:"topic,omitempty"`
	Partition int32  `protobuf:"varint,6,opt,name=partition" json:"partition,omitempty"`
	Offset    int64  `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Parent    *UUID  `protobuf:"bytes,8,opt,name=parent" json:"parent,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Event) GetId() *UUID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Event) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Event) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Event) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Event) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *Event) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Event) GetParent() *UUID {
	if m != nil {
		return m.Parent
	}
	return nil
}

type PagedEvents struct {
	Limit  int64    `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64    `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Total  int64    `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Events []*Event `protobuf:"bytes,4,rep,name=events" json:"events,omitempty"`
}

func (m *PagedEvents) Reset()                    { *m = PagedEvents{} }
func (m *PagedEvents) String() string            { return proto.CompactTextString(m) }
func (*PagedEvents) ProtoMessage()               {}
func (*PagedEvents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PagedEvents) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PagedEvents) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PagedEvents) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PagedEvents) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type PagingInfo struct {
	Limit  int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *PagingInfo) Reset()                    { *m = PagingInfo{} }
func (m *PagingInfo) String() string            { return proto.CompactTextString(m) }
func (*PagingInfo) ProtoMessage()               {}
func (*PagingInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PagingInfo) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PagingInfo) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type StreamRequest struct {
}

func (m *StreamRequest) Reset()                    { *m = StreamRequest{} }
func (m *StreamRequest) String() string            { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()               {}
func (*StreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*UUID)(nil), "commander.UUID")
	proto.RegisterType((*CommandParams)(nil), "commander.CommandParams")
	proto.RegisterType((*Command)(nil), "commander.Command")
	proto.RegisterType((*PagedCommands)(nil), "commander.PagedCommands")
	proto.RegisterType((*Event)(nil), "commander.Event")
	proto.RegisterType((*PagedEvents)(nil), "commander.PagedEvents")
	proto.RegisterType((*PagingInfo)(nil), "commander.PagingInfo")
	proto.RegisterType((*StreamRequest)(nil), "commander.StreamRequest")
}

func init() { proto.RegisterFile("model/Commander.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x94, 0xcf, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0x33, 0xd9, 0x64, 0xb3, 0xfb, 0x62, 0xa8, 0x0c, 0xb6, 0x0c, 0xa5, 0xe0, 0x32, 0x17,
	0x17, 0x84, 0x18, 0xaa, 0x27, 0xa1, 0x88, 0xad, 0x1e, 0x02, 0x82, 0x61, 0xa4, 0x17, 0x6f, 0xe3,
	0xee, 0x24, 0x0e, 0xec, 0x2f, 0x77, 0xa7, 0x85, 0xe2, 0xd1, 0x7f, 0xca, 0xff, 0xc8, 0x93, 0xff,
	0x83, 0xec, 0xdb, 0xc9, 0x66, 0xd3, 0x6e, 0x11, 0xc1, 0x4b, 0x6f, 0xf3, 0xde, 0xbc, 0x79, 0xdf,
	0xcf, 0x77, 0x7e, 0xc1, 0x61, 0x9a, 0xc7, 0x2a, 0x79, 0x71, 0x91, 0xa7, 0xa9, 0xcc, 0x62, 0x55,
	0xce, 0x8b, 0x32, 0x37, 0x39, 0xf5, 0xa3, 0x6d, 0x82, 0x9f, 0xc0, 0xe8, 0xf2, 0x72, 0xf9, 0x8e,
	0x3e, 0x81, 0xf1, 0xb5, 0x4c, 0xae, 0x14, 0x23, 0x01, 0x09, 0x7d, 0xd1, 0x04, 0xfc, 0x23, 0xcc,
	0xec, 0xda, 0x95, 0x2c, 0x65, 0x5a, 0xd1, 0x23, 0x70, 0x65, 0x64, 0x74, 0x9e, 0xd9, 0x3a, 0x1b,
	0x51, 0x0a, 0xa3, 0x58, 0x1a, 0xc9, 0x86, 0x98, 0xc5, 0x71, 0x9d, 0xab, 0x6e, 0xb2, 0x88, 0x39,
	0x01, 0x09, 0x3d, 0x81, 0x63, 0xfe, 0x9b, 0xc0, 0xc4, 0x76, 0xa4, 0x4f, 0x61, 0xa8, 0x63, 0xec,
	0x33, 0x3d, 0x3d, 0x98, 0xb7, 0x48, 0xf3, 0x9a, 0x47, 0x0c, 0x75, 0xdc, 0x11, 0x1b, 0xf6, 0x8a,
	0x39, 0x1d, 0xb1, 0x13, 0xf0, 0x8d, 0x4e, 0x55, 0x65, 0x64, 0x5a, 0xb0, 0x51, 0x40, 0x42, 0x47,
	0xec, 0x12, 0xb5, 0x3b, 0x93, 0x17, 0x3a, 0x62, 0xe3, 0xc6, 0x1d, 0x06, 0xf5, 0x9a, 0x42, 0x96,
	0x46, 0xa3, 0x84, 0x1b, 0x90, 0x70, 0x2c, 0x76, 0x89, 0x5a, 0x3d, 0x5f, 0xaf, 0x2b, 0x65, 0xd8,
	0x04, 0xdb, 0xd9, 0x88, 0x3e, 0x07, 0x2f, 0xfa, 0xaa, 0x93, 0xb8, 0x54, 0x19, 0xf3, 0x02, 0xa7,
	0x0f, 0xbe, 0x2d, 0xe0, 0x3f, 0x08, 0xcc, 0x56, 0x72, 0xa3, 0x62, 0x6b, 0xba, 0xaa, 0x51, 0x12,
	0x9d, 0x6a, 0x83, 0xc6, 0x1d, 0xd1, 0x04, 0x1d, 0xb1, 0xe1, 0x9e, 0x18, 0x82, 0x1b, 0x99, 0xa0,
	0x57, 0x47, 0x34, 0x01, 0x9d, 0x83, 0x67, 0x15, 0x2b, 0x36, 0x42, 0x04, 0xda, 0x41, 0xb0, 0x52,
	0xa2, 0xad, 0xe1, 0xbf, 0x08, 0x8c, 0xdf, 0x5f, 0xab, 0xcc, 0x3c, 0xd4, 0x3d, 0x7f, 0x06, 0x6e,
	0x21, 0x4b, 0x95, 0x19, 0xe6, 0xf5, 0xa3, 0xdb, 0x69, 0xfe, 0x1d, 0xa6, 0xb8, 0xdd, 0xe8, 0xf6,
	0xff, 0x6c, 0x76, 0x08, 0xae, 0xc2, 0x6e, 0x76, 0xab, 0x1f, 0x77, 0xb4, 0x51, 0x46, 0xd8, 0x79,
	0xfe, 0x1a, 0x60, 0x25, 0x37, 0x3a, 0xdb, 0x2c, 0xb3, 0x75, 0xfe, 0x6f, 0xda, 0xfc, 0x00, 0x66,
	0x9f, 0x4c, 0xa9, 0x64, 0x2a, 0xd4, 0xb7, 0x2b, 0x55, 0x99, 0xd3, 0x9f, 0x0e, 0xf8, 0xed, 0xbb,
	0xa5, 0x6f, 0x60, 0x76, 0x51, 0x2a, 0x69, 0xd4, 0xf6, 0xf1, 0xb0, 0xbb, 0x07, 0xde, 0x3c, 0xd1,
	0xe3, 0x9e, 0xab, 0xc0, 0x07, 0xf4, 0x2d, 0x3c, 0xfa, 0xa0, 0x2b, 0xd3, 0x5e, 0xc3, 0xc3, 0x4e,
	0xd5, 0x0e, 0xfa, 0x98, 0xed, 0xa7, 0x77, 0xf7, 0x96, 0x0f, 0xe8, 0x2b, 0x98, 0xda, 0xe8, 0xfc,
	0x66, 0x19, 0xd3, 0xdb, 0x67, 0x70, 0xaf, 0xf0, 0xf6, 0x0b, 0x69, 0xfc, 0xed, 0x91, 0xef, 0x59,
	0xee, 0x6f, 0xb0, 0x20, 0xf4, 0x0c, 0xa0, 0x66, 0xb7, 0x67, 0x7a, 0x0f, 0xf9, 0xd1, 0x6d, 0xf2,
	0xa6, 0x9c, 0x0f, 0xe8, 0x02, 0x7c, 0x1c, 0xf7, 0x53, 0xdf, 0x39, 0x4e, 0x3e, 0xa0, 0x67, 0x30,
	0xc5, 0xe1, 0x5f, 0x89, 0x7b, 0x16, 0x2f, 0xc8, 0xf9, 0xe4, 0xf3, 0x18, 0xff, 0xdd, 0x2f, 0x2e,
	0x7e, 0xb7, 0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xda, 0x81, 0x8b, 0x94, 0x87, 0x05, 0x00,
	0x00,
}
